apply plugin: 'java'
// For buildscript -> repositories -> maven
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Load the version number. This file sits in resources to include it into the jar. Because the version
// is needed at runtime.

// Configure the maven repository deployment
install {
    repositories.mavenInstaller {
        // Set the version
        pom.version = project.version
        // Set the group/namespace for the maven repository deployment.
        pom.groupId = project.groupId
        // Give the artifact a 'base name' (The version is added to the 'base name')
        pom.artifactId = project.artifactId
    }
}

repositories {
    if (project.hasProperty('local')) {
        mavenLocal()
    }
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven { url 'http://repository.activeeon.com/content/groups/proactive/'}
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repository.activeeon.com/content/groups/proactive/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2"
        // Code Formatting dependencies
        classpath "com.diffplug.gradle.spotless:spotless:2.4.0"
        classpath "org.ow2.proactive:coding-rules:1.0.0"
        delete "gradle/ext"
        ant.unjar src: configurations.classpath.find { it.name.startsWith("coding-rules") }, dest: 'gradle/ext'
        // END code formatting dependencies
    }
}

apply from: "$rootDir/gradle/ext/coding-format.gradle"

configurations {
    provided
}

sourceSets {
    main {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'log4j:log4j:1.2.17'
    provided 'org.ow2.proactive:scheduler-api:+'

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.1'
    testCompile('junit:junit:4.12') {
        exclude module: 'hamcrest'
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.mockito:mockito-all:1.10.19'

}

// Upload the archives to the nexus repository. For execution, that needs to have
// the username and password set in the command line by -DnexusUsername=[username]
// and -DnexusPassword=[password]
uploadArchives {
    repositories {
        mavenDeployer {
            // Set the version
            pom.version = project.version
            // Set the group/namespace for the maven repository deployment.
            pom.groupId = project.groupId
            // Give the artifact a 'base name' (The version is added to the 'base name')
            pom.artifactId = project.artifactId

            snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
            repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
        }
    }
}
